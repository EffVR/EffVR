#pragma kernel Reprojector
RWTexture2D<half4> output;
RWTexture2D<half4> output_mask;
Texture2D<half2> shift_buffer;
Texture2D<half4> rgb_buffer;

half tex_width;

[numthreads(1, 64, 1)]
void Reprojector(uint2 id : SV_DispatchThreadID) {
	for (int i = 0; i < tex_width; ++i) {    // for left,  for right is  int i = tex_width; i > 0; i--
        const uint2 xy = uint2(i, id.y);
        const half2 shift_depth = shift_buffer[xy];
        const half shift = shift_depth.x;
		if (shift > 1) { // fix blind spot at the right edge of image
            return;
		}
        const uint new_x = shift * tex_width + 0.5f;
        const uint2 new_xy = uint2(new_x, id.y);            // Potential artifacts.

    	if (output[new_xy].w == 0) {
            const half4 color = rgb_buffer[xy];
            output[new_xy] = half4(color.xyz, shift_depth.y+0.001f);
            output_mask[new_xy] = half4(1, 1, 1, 1);
    	}
    }
}